// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.AspNetCore.MultiTenancy.Templates.MultiTenancyConfiguration
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using Intent.Modules.AspNetCore.MultiTenancy.Settings;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class MultiTenancyConfigurationTemplate : CSharpTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\n");
            this.Write(@"using System;
using Finbuckle.MultiTenant;
using Finbuckle.MultiTenant.Stores;
using Intent.RoslynWeaver.Attributes;
using Microsoft.AspNetCore.Builder;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace ");
            
            #line 20 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public static class ");
            
            #line 22 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        public static IServiceCollection ConfigureMultiTenancy(this ISer" +
                    "viceCollection services, IConfiguration configuration)\r\n        {\r\n            s" +
                    "ervices.AddMultiTenant<TenantInfo>()\r\n");
            
            #line 27 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  if (ExecutionContext.Settings.GetMultitenancySettings().Store().IsEntityFrameworkCore()) { 
            
            #line default
            #line hidden
            this.Write("                .WithEFCoreStore<");
            
            #line 28 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetMultiTenantStoreDbContextName()));
            
            #line default
            #line hidden
            this.Write(", TenantInfo>() // See https://www.finbuckle.com/MultiTenant/Docs/v6.5.1/Stores#e" +
                    "fcore-store\r\n");
            
            #line 29 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } else if (ExecutionContext.Settings.GetMultitenancySettings().Store().IsInMemory()) { 
            
            #line default
            #line hidden
            this.Write("                .WithInMemoryStore(SetupInMemoryStore) // See https://www.finbuck" +
                    "le.com/MultiTenant/Docs/v6.5.1/Stores#in-memory-store\r\n");
            
            #line 31 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } else if (ExecutionContext.Settings.GetMultitenancySettings().Store().IsConfiguration()) { 
            
            #line default
            #line hidden
            this.Write("                .WithConfigurationStore() // See https://www.finbuckle.com/MultiT" +
                    "enant/Docs/v6.5.1/Stores#configuration-store\r\n");
            
            #line 33 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } 
            
            #line default
            #line hidden
            
            #line 34 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  if (ExecutionContext.Settings.GetMultitenancySettings().Strategy().IsHeaderStrategy()) { 
            
            #line default
            #line hidden
            this.Write("                .WithHeaderStrategy(\"X-Tenant-Identifier\"); // See https://www.fi" +
                    "nbuckle.com/MultiTenant/Docs/v6.5.1/Strategies#header-strategy\r\n");
            
            #line 36 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } else if (ExecutionContext.Settings.GetMultitenancySettings().Strategy().IsHostStrategy()) { 
            
            #line default
            #line hidden
            this.Write("                .WithHostStrategy(); // default pattern is __tenant__.* (e.g. htt" +
                    "ps://tenantidentifier.example.com). See https://www.finbuckle.com/MultiTenant/Do" +
                    "cs/v6.5.1/Strategies#host-strategy\r\n");
            
            #line 38 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } else if (ExecutionContext.Settings.GetMultitenancySettings().Strategy().IsClaimStrategy()) { 
            
            #line default
            #line hidden
            this.Write("                .WithClaimStrategy(); // default claim value with type __tenant__" +
                    ". See https://www.finbuckle.com/MultiTenant/Docs/v6.5.1/Strategies#claim-strateg" +
                    "y\r\n");
            
            #line 40 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } 
            
            #line default
            #line hidden
            this.Write("            return services;\r\n        }\r\n\r\n        public static void UseMultiTen" +
                    "ancy(this IApplicationBuilder app)\r\n        {\r\n            app.UseMultiTenant();" +
                    "\r\n");
            
            #line 47 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  if (!ExecutionContext.Settings.GetMultitenancySettings().Store().IsConfiguration()) { 
            
            #line default
            #line hidden
            this.Write("            InitializeStore(app.ApplicationServices);\r\n");
            
            #line 49 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } 
            
            #line default
            #line hidden
            this.Write("        }\r\n");
            
            #line 51 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  if (ExecutionContext.Settings.GetMultitenancySettings().Store().IsInMemory()) { 
            
            #line default
            #line hidden
            this.Write("\r\n        [IntentManaged(Mode.Merge)]\r\n        private static void SetupInMemoryS" +
                    "tore(InMemoryStoreOptions<TenantInfo> options)\r\n        {\r\n            // config" +
                    "ure in memory store...\r\n            options.IsCaseSensitive = false;\r\n        }\r" +
                    "\n");
            
            #line 59 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } 
            
            #line default
            #line hidden
            
            #line 60 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  if (!ExecutionContext.Settings.GetMultitenancySettings().Store().IsConfiguration()) { 
            
            #line default
            #line hidden
            this.Write(@"
        [IntentManaged(Mode.Merge)]
        public static void InitializeStore(IServiceProvider sp)
        {
            var scopeServices = sp.CreateScope().ServiceProvider;
            var store = scopeServices.GetRequiredService<IMultiTenantStore<TenantInfo>>();

            store.TryAddAsync(new TenantInfo() { Id = ""sample-tenant-1"", Identifier = ""tenant1"", Name = ""Tenant 1"", ConnectionString = ""Tenant1Connection"" }).Wait();
            store.TryAddAsync(new TenantInfo() { Id = ""sample-tenant-2"", Identifier = ""tenant2"", Name = ""Tenant 2"", ConnectionString = ""Tenant2Connection"" }).Wait();
        }
");
            
            #line 71 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.MultiTenancy\Templates\MultiTenancyConfiguration\MultiTenancyConfigurationTemplate.tt"
  } 
            
            #line default
            #line hidden
            this.Write("    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
