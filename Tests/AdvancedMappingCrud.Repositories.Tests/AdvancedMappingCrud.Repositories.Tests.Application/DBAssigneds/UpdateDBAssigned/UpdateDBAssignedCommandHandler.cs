using System;
using System.Threading;
using System.Threading.Tasks;
using AdvancedMappingCrud.Repositories.Tests.Domain.Common.Exceptions;
using AdvancedMappingCrud.Repositories.Tests.Domain.Repositories.ExplicitAutoGenerated;
using Intent.RoslynWeaver.Attributes;
using MediatR;

[assembly: DefaultIntentManaged(Mode.Fully)]
[assembly: IntentTemplate("Intent.Application.MediatR.CommandHandler", Version = "2.0")]

namespace AdvancedMappingCrud.Repositories.Tests.Application.DBAssigneds.UpdateDBAssigned
{
    [IntentManaged(Mode.Merge, Signature = Mode.Fully)]
    public class UpdateDBAssignedCommandHandler : IRequestHandler<UpdateDBAssignedCommand>
    {
        private readonly IDBAssignedRepository _dBAssignedRepository;

        [IntentManaged(Mode.Merge)]
        public UpdateDBAssignedCommandHandler(IDBAssignedRepository dBAssignedRepository)
        {
            _dBAssignedRepository = dBAssignedRepository;
        }

        [IntentManaged(Mode.Fully, Body = Mode.Fully)]
        public async Task Handle(UpdateDBAssignedCommand request, CancellationToken cancellationToken)
        {
            var dBAssigned = await _dBAssignedRepository.FindByIdAsync(request.Id, cancellationToken);
            if (dBAssigned is null)
            {
                throw new NotFoundException($"Could not find DBAssigned '{request.Id}'");
            }

            dBAssigned.Name = request.Name;
        }
    }
}