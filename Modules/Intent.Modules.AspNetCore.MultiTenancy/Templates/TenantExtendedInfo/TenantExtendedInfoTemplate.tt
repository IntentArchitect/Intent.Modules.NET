<#@ template language="C#" inherits="CSharpTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using System;
using System.Collections.Generic;
using System.Linq;
using Finbuckle.MultiTenant;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>;

public class <#= ClassName #> : ITenantInfo
{
    public string Id { get; set; }
    public string Identifier { get; set; }
    public string Name { get; set; }

    string ITenantInfo.ConnectionString
    {
        get => throw new InvalidOperationException(
            $"This class supports connection strings for multiple database connection technologies, use \"{ConnectionStrings}\" instead");
        set => throw new InvalidOperationException(
            $"This class supports connection strings for multiple database connection technologies, use \"{ConnectionStrings}\" instead");
    }

    public ICollection<TenantConnectionString> ConnectionStrings { get; set; } = new List<TenantConnectionString>();

    public ITenantInfo this[string name] => new TenantInfo
    {
        Id = Id,
        Identifier = Identifier,
        Name = Name,
        ConnectionString = ConnectionStrings.Single(x => x.Name == name).Value
    };
}

public class TenantConnectionString
{
    public Guid Id { get; set; }
    public string CustomTenantInfoId { get; set; }
    public string Name { get; set; }
    public string Value { get; set; }
}
