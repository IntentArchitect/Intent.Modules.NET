<#@ template language="C#" inherits="CSharpTemplateBase<Intent.Modelers.Services.Api.OperationModel>" #>
<#@ output extension=".cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.AzureFunctions.Api" #>
using System;
using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.Extensions.Logging;
using Newtonsoft.Json;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public class <#= ClassName #>
    {
        public <#= ClassName #>()
        {
        }

        [FunctionName("<#= ClassName #>")]
        public async Task<IActionResult> Run(<#= GetRunParameterDefinition() #>)
        {
<#
    foreach (var param in GetQueryParams())
    {
#>
            var <#= param.Name.ToParameterName() #>Param = req.Query["<#= param.Name.ToCamelCase() #>"];
<#
    }

    if (Model.HasHttpTrigger() && !string.IsNullOrWhiteSpace(GetDtoType()))
    {
#>
            string requestBody = await new StreamReader(req.Body).ReadToEndAsync();
            var dto = JsonConvert.DeserializeObject<<#= GetDtoType() #>>(requestBody);
<#
    }
#>
        }
    }
}