<#@ template language="C#" inherits="CSharpTemplateBase<Intent.Modelers.Domain.Events.Api.DomainEventModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using MediatR;
using System;
using System.Threading;
using System.Threading.Tasks;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public class <#= ClassName #> : INotificationHandler<<#= GetDomainEventNotificationType() #><<#= GetDomainEventType() #>>>
    {
        public <#= ClassName #>()
        {
        }

        public Task Handle(<#= GetDomainEventNotificationType() #><<#= GetDomainEventType() #>> notification, CancellationToken cancellationToken)
        {
            throw new NotImplementedException("Implement your handler logic here...");
        }
    }
}