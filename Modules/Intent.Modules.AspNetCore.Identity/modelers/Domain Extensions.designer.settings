<?xml version="1.0" encoding="utf-8"?>
<settings version="3.1.1">
  <id>d06187ef-95a6-4243-b299-2e2d028478ef</id>
  <name>Domain Extensions</name>
  <designerReferences />
  <packageSettings />
  <packageExtensions />
  <elementSettings />
  <elementExtensions>
    <elementExtension type="Class" typeId="04e12b51-ed12-42a3-9667-a6aa81bb6d10">
      <mappingSettings />
      <macros>
        <macro trigger="on-changed">
          <script>/// &lt;reference path="../../../typings/elementmacro.context.api.d.ts" /&gt;
const identityUserStereotypeId = "efde089e-21e6-4da1-b086-72d7f6caf389";
const identityUserId = "a3f490b4-3c88-49fd-b273-6efddb5b7f0d";
const generalizationType = "Generalization";
async function execute() {
    var _a, _b;
    const identityUserStereotype = element.getStereotype(identityUserStereotypeId);
    if (identityUserStereotype == null) {
        return;
    }
    var generalization = element.getAssociations(generalizationType)[0];
    if (((_b = (_a = generalization === null || generalization === void 0 ? void 0 : generalization.typeReference) === null || _a === void 0 ? void 0 : _a.getType()) === null || _b === void 0 ? void 0 : _b.id) == identityUserId) {
        return;
    }
    if ((dialogService === null || dialogService === void 0 ? void 0 : dialogService.info) != null) {
        await dialogService.info("When the \"Identity User\" stereotype is applied to a class it must derive from the IdentityUser class, " +
            "this class will now be updated to meet this requirement,");
    }
    generalization === null || generalization === void 0 ? void 0 : generalization.delete();
    createAssociation(generalizationType, element.id, identityUserId);
}
/**
 * Used by Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.Identity
 *
 * Source code here:
 * https://github.com/IntentArchitect/Intent.Modules/blob/master/DesignerMacros/src/aspnetcore-identity/class-on-changed/class-on-changed.ts
 */
await execute();
</script>
        </macro>
      </macros>
    </elementExtension>
  </elementExtensions>
  <associationSettings />
  <associationExtensions />
  <mappingSettings />
  <mappableElementPackages />
  <mappableElementPackageExtensions />
</settings>