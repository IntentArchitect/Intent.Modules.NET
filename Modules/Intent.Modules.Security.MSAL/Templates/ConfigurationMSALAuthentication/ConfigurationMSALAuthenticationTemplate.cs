// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.Security.MSAL.Templates.ConfigurationMSALAuthentication
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using Intent.Modules.Application.Identity.Templates;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NET.MSAL\Modules\Intent.Modules.Security.MSAL\Templates\ConfigurationMSALAuthentication\ConfigurationMSALAuthenticationTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class ConfigurationMSALAuthenticationTemplate : CSharpTemplateBase<object, Intent.Modules.Security.MSAL.Templates.ConfigurationMSALAuthentication.MSALAuthenticationDecorator>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing Microsoft.Extensions.Configuration;\r\nusing Microsoft.Extensions.DependencyInjection;\r\nusing Microsoft.AspNetCore.Authorization;\r\n\r\n[assembly: DefaultIntentManaged(Mode.Fully)]\r\n\r\nnamespace ");
            
            #line 19 "C:\Dev\Intent.Modules.NET.MSAL\Modules\Intent.Modules.Security.MSAL\Templates\ConfigurationMSALAuthentication\ConfigurationMSALAuthenticationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public static class ");
            
            #line 21 "C:\Dev\Intent.Modules.NET.MSAL\Modules\Intent.Modules.Security.MSAL\Templates\ConfigurationMSALAuthentication\ConfigurationMSALAuthenticationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        // Use '[IntentManaged(Mode.Ignore)]' on this method should you want to deviate from the standard MSAL token approach\r\n        public static IServiceCollection ConfigureMSALSecurity(this IServiceCollection services, IConfiguration configuration)\r\n        {\r\n            services.AddScoped<");
            
            #line 26 "C:\Dev\Intent.Modules.NET.MSAL\Modules\Intent.Modules.Security.MSAL\Templates\ConfigurationMSALAuthentication\ConfigurationMSALAuthenticationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetCurrentUserServiceInterfaceName()));
            
            #line default
            #line hidden
            this.Write(", ");
            
            #line 26 "C:\Dev\Intent.Modules.NET.MSAL\Modules\Intent.Modules.Security.MSAL\Templates\ConfigurationMSALAuthentication\ConfigurationMSALAuthenticationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetCurrentUserServiceName()));
            
            #line default
            #line hidden
            this.Write(">();\r\n            services.AddHttpContextAccessor();\r\n            ");
            
            #line 28 "C:\Dev\Intent.Modules.NET.MSAL\Modules\Intent.Modules.Security.MSAL\Templates\ConfigurationMSALAuthentication\ConfigurationMSALAuthenticationTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(base.GetDecoratorsOutput(p => p.GetConfigurationCode())));
            
            #line default
            #line hidden
            this.Write("\r\n            services.AddAuthorization(ConfigureAuthorization);\r\n\r\n            return services;\r\n        }\r\n\r\n        [IntentManaged(Mode.Ignore)]\r\n        private static void ConfigureAuthorization(AuthorizationOptions options)\r\n        {\r\n            //Configure policies and other authorization options here. For example:\r\n            //options.AddPolicy(\"EmployeeOnly\", policy => policy.RequireClaim(\"roles\", \"employee\"));\r\n            //options.AddPolicy(\"AdminOnly\", policy => policy.RequireClaim(\"roles\", \"admin\"));\r\n            //options.AddPolicy(\"DefaultPolicy\", policy => policy.Requirements.Add(new ClaimsScopeOrRoleRequirement()));\r\n        }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
}
