<#@ template  debug="true"  inherits="CSharpTemplateBase<object>" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="Intent.Modelers.Domain.Api" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
using System.Collections.Generic;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    /// <summary>
    /// Instead of retrieving the entire collection of elements from
    /// a persistence store, a single <see cref="IPagedResult{T}"/> is returned
    /// representing a single "page" of elements. Supplying a different <b>PageNo</b>
    /// will return a different "page" of elements. 
    /// </summary>
    /// <typeparam name="T">Type of elements</typeparam>
    public interface <#= ClassName #><out T> : IEnumerable<T>
    {
        int TotalCount { get;  }
        int PageCount { get; }
        int PageNo { get; }
        int PageSize { get; }
    }
}
