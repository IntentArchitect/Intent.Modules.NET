// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.ContinuousIntegration.AzurePipelines.Templates.AzurePipelines
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.ContinuousIntegration.AzurePipelines\Templates\AzurePipelines\AzurePipelinesTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class AzurePipelinesTemplate : IntentTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("trigger:\r\n  branches:\r\n    include:\r\n    - '*'\r\n\r\npool:\r\n  vmImage: 'ubuntu-latest'\r\n\r\nvariables:\r\n- name: 'buildConfiguration'\r\n  value: 'debug'\r\n- name: 'intentSolutionPath'\r\n  value: 'intent'\r\n# - group: 'Intent Architect Credentials'\r\n\r\nsteps:\r\n- task: DotNetCoreCLI@2\r\n  displayName: 'dotnet build $(buildConfiguration)'\r\n  inputs:\r\n    command: 'build'\r\n    projects: '**/*.csproj'\r\n    arguments: '--configuration $(buildConfiguration)'\r\n\r\n- task: DotNetCoreCLI@2\r\n  displayName: 'dotnet test'\r\n  inputs:\r\n    command: test\r\n    projects: '**/*Tests/*.csproj'\r\n    arguments: '--configuration $(buildConfiguration)'\r\n\r\n- task: PowerShell@2\r\n  displayName: 'install intent cli'\r\n  inputs:\r\n    targetType: 'inline'\r\n    pwsh: true\r\n    script: dotnet tool install Intent.SoftwareFactory.CLI --global \r\n\r\n- task: PowerShell@2\r\n  displayName: 'run intent cli'\r\n  env:\r\n    INTENT_USER: $(intent-architect-user)\r\n    INTENT_PASS: $(intent-architect-password)\r\n    INTENT_SOLUTION_PATH: $(intentSolutionPath)\r\n  inputs:\r\n    targetType: 'inline'\r\n    pwsh: true\r\n    script: |\r\n      if (($Env:INTENT_USER -Eq $null) -or ($Env:INTENT_USER -Like \"`$(*\")) {\r\n        Write-Host \"##vso[task.logissue type=warning;]Intent Architect Credentials not configured, see https://github.com/IntentArchitect/Intent.Modules.NET/blob/development/Modules/Intent.Modules.ContinuousIntegration.AzurePipelines/README.md#configuring-intent-architect-credentials for more information.\"\r\n        Return\r\n      }\r\n\r\n      intent-cli ensure-no-outstanding-changes \"$Env:INTENT_USER\" \"$Env:INTENT_PASS\" \"$Env:INTENT_SOLUTION_PATH\"\r\n");
            return this.GenerationEnvironment.ToString();
        }
    }
    
}
