//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intent.Modules.Application.Contracts.Clients.Templates.DtoContract {
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Modules.Common.Templates;
    using System;
    
    
    public partial class DtoContractTemplate : CSharpTemplateBase<Intent.Modelers.Types.ServiceProxies.Api.ServiceProxyDTOModel> {
        
        public override string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 5 ""
            this.Write("\r\n[assembly: DefaultIntentManaged(Mode.Fully)]\r\n\r\nnamespace ");
            
            #line default
            #line hidden
            
            #line 8 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Namespace ));
            
            #line default
            #line hidden
            
            #line 8 ""
            this.Write("\r\n{\r\n    public class ");
            
            #line default
            #line hidden
            
            #line 10 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ClassName ));
            
            #line default
            #line hidden
            
            #line 10 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GenericTypes ));
            
            #line default
            #line hidden
            
            #line 10 ""
            this.Write("\r\n    {\r\n        public static ");
            
            #line default
            #line hidden
            
            #line 12 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ClassName ));
            
            #line default
            #line hidden
            
            #line 12 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GenericTypes ));
            
            #line default
            #line hidden
            
            #line 12 ""
            this.Write(" Create(");
            
            #line default
            #line hidden
            
            #line 12 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ConstructorParameters() ));
            
            #line default
            #line hidden
            
            #line 12 ""
            this.Write(") \r\n        {\r\n            return new ");
            
            #line default
            #line hidden
            
            #line 14 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ClassName ));
            
            #line default
            #line hidden
            
            #line 14 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GenericTypes ));
            
            #line default
            #line hidden
            
            #line 14 ""
            this.Write("\r\n            {\r\n");
            
            #line default
            #line hidden
            
            #line 16 ""

    foreach (var field in Model.Fields)
    {

            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write("                ");
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( field.Name.ToPascalCase() ));
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(" = ");
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( field.Name.ToLocalVariableName() ));
            
            #line default
            #line hidden
            
            #line 20 ""
            this.Write(",\r\n");
            
            #line default
            #line hidden
            
            #line 21 ""

    }

            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write("            };\r\n        }\r\n");
            
            #line default
            #line hidden
            
            #line 26 ""

    foreach (var field in Model.Fields)
    {

            
            #line default
            #line hidden
            
            #line 30 ""
            this.Write("        public ");
            
            #line default
            #line hidden
            
            #line 30 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GetTypeName(field.TypeReference) ));
            
            #line default
            #line hidden
            
            #line 30 ""
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 30 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( field.Name.ToPascalCase() ));
            
            #line default
            #line hidden
            
            #line 30 ""
            this.Write(" { get; set; }\r\n");
            
            #line default
            #line hidden
            
            #line 31 ""

    }

            
            #line default
            #line hidden
            
            #line 34 ""
            this.Write("    }\r\n}");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public override void Initialize() {
            base.Initialize();
        }
    }
}
