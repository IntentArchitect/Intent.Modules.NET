<#@ template language="C#" inherits="CSharpTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modules.AspNetCore.Swashbuckle.Templates.AuthorizeCheckOperationFilter" #>
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using Swashbuckle.AspNetCore.Swagger;
using Swashbuckle.AspNetCore.SwaggerGen;
using Swashbuckle.AspNetCore.SwaggerUI;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
        public static IServiceCollection ConfigureSwagger(this IServiceCollection services, IConfiguration configuration)
        {
            services.AddSwaggerGen(c => c.OperationFilter<<#= GetTypeName(AuthorizeCheckOperationFilterTemplate.TemplateId) #>>());
            services.Configure<SwaggerGenOptions>(configuration.GetSection("Swashbuckle:SwaggerGen"));
            services.Configure<SwaggerOptions>(configuration.GetSection("Swashbuckle:Swagger"));
            services.Configure<SwaggerUIOptions>(configuration.GetSection("Swashbuckle:SwaggerUI"));
            return services;
        }
    }
}