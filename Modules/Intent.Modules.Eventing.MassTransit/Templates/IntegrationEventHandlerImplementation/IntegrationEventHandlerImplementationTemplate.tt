<#@ template language="C#" inherits="CSharpTemplateBase<Intent.Modelers.Eventing.Api.MessageSubscribeAssocationTargetEndModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modules.Eventing.Contracts.Templates" #>
using System;
using System.Threading;
using System.Threading.Tasks;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    [IntentManaged(Mode.Merge, Signature = Mode.Fully)]
    public class <#= ClassName #> : <#= this.GetIntegrationEventHandlerInterfaceName() #><<#= GetMessageName() #>>
    {
        [IntentManaged(Mode.Ignore)]
        public <#= ClassName #>()
        {
        }
        
        [IntentManaged(Mode.Fully, Body = Mode.Ignore)]
        public async Task HandleAsync(<#= GetMessageName() #> message, CancellationToken cancellationToken = default)
        {
            throw new NotImplementedException(); 
        }
    }
}