<#@ template language="C#" inherits="CSharpTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public class <#= ClassName #> : <#= this.GetPublisherInterfaceName() #>
    {
        private readonly <#= this.GetMessagePublishContextName() #> _context;

        public <#= ClassName #>(<#= this.GetMessagePublishContextName() #> context)
        {
            _context = context;
        }
        
        public void Publish<T>(T message) where T : class
        {
            _context.AddMessage(message);
        }
    }
}