// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.AspNetCore.Identity.Templates.IdentityServiceCollectionExtensions
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.Identity\Templates\IdentityServiceCollectionExtensions\IdentityServiceCollectionExtensionsTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class IdentityServiceCollectionExtensionsTemplate : CSharpTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using System;\r\nusing System.Diagnostics.CodeAnalysis;\r\nusing Microsoft.AspNetCore" +
                    ".Identity;\r\nusing Microsoft.Extensions.DependencyInjection.Extensions;\r\n\r\n[assem" +
                    "bly: DefaultIntentManaged(Mode.Fully)]\r\n\r\nnamespace ");
            
            #line 17 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.Identity\Templates\IdentityServiceCollectionExtensions\IdentityServiceCollectionExtensionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write(@";

/// <summary>
/// Adaptation of <see href=""https://github.com/dotnet/aspnetcore/blob/6a7bcda42de7b98196b38924cc354216eba57c9b/src/Identity/Core/src/IdentityServiceCollectionExtensions.cs""/>
/// which configures Identity services without also adding Cookie authentication.
/// </summary>
public static class ");
            
            #line 23 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.Identity\Templates\IdentityServiceCollectionExtensions\IdentityServiceCollectionExtensionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    /// <summary>\r\n    /// Adds the default identity system configuration fo" +
                    "r the specified User and Role types.\r\n    /// </summary>\r\n    /// <typeparam nam" +
                    "e=\"TUser\">The type representing a User in the system.</typeparam>\r\n    /// <type" +
                    "param name=\"TRole\">The type representing a Role in the system.</typeparam>\r\n    " +
                    "/// <param name=\"services\">The services available in the application.</param>\r\n " +
                    "   /// <returns>An <see cref=\"IdentityBuilder\"/> for creating and configuring th" +
                    "e identity system.</returns>\r\n    public static IdentityBuilder AddIdentityWitho" +
                    "utCookieAuth<TUser, [DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.P" +
                    "ublicConstructors)] TRole>(\r\n        this IServiceCollection services)\r\n        " +
                    "where TUser : class\r\n        where TRole : class\r\n        => services.AddIdentit" +
                    "yWithoutCookieAuth<TUser, TRole>(setupAction: null!);\r\n\r\n    /// <summary>\r\n    " +
                    "/// Adds and configures the identity system for the specified User and Role type" +
                    "s.\r\n    /// </summary>\r\n    /// <typeparam name=\"TUser\">The type representing a " +
                    "User in the system.</typeparam>\r\n    /// <typeparam name=\"TRole\">The type repres" +
                    "enting a Role in the system.</typeparam>\r\n    /// <param name=\"services\">The ser" +
                    "vices available in the application.</param>\r\n    /// <param name=\"setupAction\">A" +
                    "n action to configure the <see cref=\"IdentityOptions\"/>.</param>\r\n    /// <retur" +
                    "ns>An <see cref=\"IdentityBuilder\"/> for creating and configuring the identity sy" +
                    "stem.</returns>\r\n    public static IdentityBuilder AddIdentityWithoutCookieAuth<" +
                    "TUser, [DynamicallyAccessedMembers(DynamicallyAccessedMemberTypes.PublicConstruc" +
                    "tors)] TRole>(\r\n        this IServiceCollection services,\r\n        Action<Identi" +
                    "tyOptions> setupAction)\r\n        where TUser : class\r\n        where TRole : clas" +
                    "s\r\n    {\r\n        // Hosting doesn\'t add IHttpContextAccessor by default\r\n      " +
                    "  services.AddHttpContextAccessor();\r\n        // Identity services\r\n        serv" +
                    "ices.TryAddScoped<IUserValidator<TUser>, UserValidator<TUser>>();\r\n        servi" +
                    "ces.TryAddScoped<IPasswordValidator<TUser>, PasswordValidator<TUser>>();\r\n      " +
                    "  services.TryAddScoped<IPasswordHasher<TUser>, PasswordHasher<TUser>>();\r\n     " +
                    "   services.TryAddScoped<ILookupNormalizer, UpperInvariantLookupNormalizer>();\r\n" +
                    "        services.TryAddScoped<IRoleValidator<TRole>, RoleValidator<TRole>>();\r\n " +
                    "       // No interface for the error describer so we can add errors without rev\'" +
                    "ing the interface\r\n        services.TryAddScoped<IdentityErrorDescriber>();\r\n   " +
                    "     services.TryAddScoped<ISecurityStampValidator, SecurityStampValidator<TUser" +
                    ">>();\r\n        services.TryAddScoped<ITwoFactorSecurityStampValidator, TwoFactor" +
                    "SecurityStampValidator<TUser>>();\r\n        services.TryAddScoped<IUserClaimsPrin" +
                    "cipalFactory<TUser>, UserClaimsPrincipalFactory<TUser, TRole>>();\r\n        servi" +
                    "ces.TryAddScoped<IUserConfirmation<TUser>, DefaultUserConfirmation<TUser>>();\r\n " +
                    "       services.TryAddScoped<UserManager<TUser>>();\r\n        services.TryAddScop" +
                    "ed<SignInManager<TUser>>();\r\n        services.TryAddScoped<RoleManager<TRole>>()" +
                    ";\r\n\r\n        if (setupAction != null)\r\n        {\r\n            services.Configure" +
                    "(setupAction);\r\n        }\r\n\r\n        return new IdentityBuilder(typeof(TUser), t" +
                    "ypeof(TRole), services);\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
