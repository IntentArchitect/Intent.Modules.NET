// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.Azure.BlobStorage.Templates.BlobStorageInterface
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Azure.BlobStorage\Templates\BlobStorageInterface\BlobStorageInterfaceTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class BlobStorageInterfaceTemplate : CSharpTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using System;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\nusing System." +
                    "Threading;\r\nusing System.Threading.Tasks;\r\n\r\n[assembly: DefaultIntentManaged(Mod" +
                    "e.Fully)]\r\n\r\nnamespace ");
            
            #line 18 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Azure.BlobStorage\Templates\BlobStorageInterface\BlobStorageInterfaceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write(@"
{
    /// <summary>
    /// Represents a single item used for bulk uploads to blob storage.
    /// </summary>
    public record BulkBlobItem(string Name, Stream DataStream);

    /// <summary>
    /// A simplified service interface to access Blob Storage.
    /// </summary>
    public interface ");
            
            #line 28 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Azure.BlobStorage\Templates\BlobStorageInterface\BlobStorageInterfaceTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        /// <summary>\r\n        /// Retrieves the URI of a specific blob " +
                    "from a given container.\r\n        /// </summary>\r\n        /// <param name=\"contai" +
                    "nerName\">The name of the blob container.</param>\r\n        /// <param name=\"blobN" +
                    "ame\">The name of the blob.</param>\r\n        /// <param name=\"cancellationToken\">" +
                    "An optional token to cancel the asynchronous operation.</param>\r\n        /// <re" +
                    "turns>The URI of the blob.</returns>\r\n        Task<Uri> GetAsync(string containe" +
                    "rName, string blobName, CancellationToken cancellationToken = default);\r\n\r\n     " +
                    "   /// <summary>\r\n        /// Lists the URIs of all blobs in a given container.\r" +
                    "\n        /// </summary>\r\n        /// <param name=\"containerName\">The name of the" +
                    " blob container.</param>\r\n        /// <param name=\"cancellationToken\">An optiona" +
                    "l token to cancel the asynchronous operation.</param>\r\n        /// <returns>An a" +
                    "sync enumerable of blob URIs.</returns>\r\n        IAsyncEnumerable<Uri> ListAsync" +
                    "(string containerName, CancellationToken cancellationToken = default);\r\n\r\n      " +
                    "  /// <summary>\r\n        /// Uploads data to a specific location in blob storage" +
                    ".\r\n        /// </summary>\r\n        /// <param name=\"cloudStorageLocation\">The UR" +
                    "I specifying where to upload the data.</param>\r\n        /// <param name=\"dataStr" +
                    "eam\">The stream of data to upload.</param>\r\n        /// <param name=\"cancellatio" +
                    "nToken\">An optional token to cancel the asynchronous operation.</param>\r\n       " +
                    " /// <returns>The URI of the uploaded blob.</returns>\r\n        Task<Uri> UploadA" +
                    "sync(Uri cloudStorageLocation, Stream dataStream, CancellationToken cancellation" +
                    "Token = default);\r\n\r\n        /// <summary>\r\n        /// Uploads data to a specif" +
                    "ic blob in a given container.\r\n        /// </summary>\r\n        /// <param name=\"" +
                    "containerName\">The name of the blob container.</param>\r\n        /// <param name=" +
                    "\"blobName\">The name of the blob.</param>\r\n        /// <param name=\"dataStream\">T" +
                    "he stream of data to upload.</param>\r\n        /// <param name=\"cancellationToken" +
                    "\">An optional token to cancel the asynchronous operation.</param>\r\n        /// <" +
                    "returns>The URI of the uploaded blob.</returns>\r\n        Task<Uri> UploadAsync(s" +
                    "tring containerName, string blobName, Stream dataStream, CancellationToken cance" +
                    "llationToken = default);\r\n\r\n        /// <summary>\r\n        /// Performs bulk upl" +
                    "oad of multiple blobs to a specific container.\r\n        /// </summary>\r\n        " +
                    "/// <param name=\"containerName\">The name of the blob container.</param>\r\n       " +
                    " /// <param name=\"blobs\">The enumerable of bulk blob items to upload.</param>\r\n " +
                    "       /// <param name=\"cancellationToken\">An optional token to cancel the async" +
                    "hronous operation.</param>\r\n        /// <returns>An async enumerable of blob URI" +
                    "s for each uploaded blob.</returns>\r\n        IAsyncEnumerable<Uri> BulkUploadAsy" +
                    "nc(string containerName, IEnumerable<BulkBlobItem> blobs, CancellationToken canc" +
                    "ellationToken = default);\r\n\r\n        /// <summary>\r\n        /// Downloads data f" +
                    "rom a specific location in blob storage.\r\n        /// </summary>\r\n        /// <p" +
                    "aram name=\"cloudStorageLocation\">The URI specifying where to download the data f" +
                    "rom.</param>\r\n        /// <param name=\"cancellationToken\">An optional token to c" +
                    "ancel the asynchronous operation.</param>\r\n        /// <returns>A stream contain" +
                    "ing the downloaded data.</returns>\r\n        Task<Stream> DownloadAsync(Uri cloud" +
                    "StorageLocation, CancellationToken cancellationToken = default);\r\n\r\n        /// " +
                    "<summary>\r\n        /// Downloads data from a specific blob in a given container." +
                    "\r\n        /// </summary>\r\n        /// <param name=\"containerName\">The name of th" +
                    "e blob container.</param>\r\n        /// <param name=\"blobName\">The name of the bl" +
                    "ob.</param>\r\n        /// <param name=\"cancellationToken\">An optional token to ca" +
                    "ncel the asynchronous operation.</param>\r\n        /// <returns>A stream containi" +
                    "ng the downloaded data.</returns>\r\n        Task<Stream> DownloadAsync(string con" +
                    "tainerName, string blobName, CancellationToken cancellationToken = default);\r\n\r\n" +
                    "        /// <summary>\r\n        /// Deletes a blob at a specific location in blob" +
                    " storage.\r\n        /// </summary>\r\n        /// <param name=\"cloudStorageLocation" +
                    "\">The URI specifying the blob to delete.</param>\r\n        /// <param name=\"cance" +
                    "llationToken\">An optional token to cancel the asynchronous operation.</param>\r\n " +
                    "       Task DeleteAsync(Uri cloudStorageLocation, CancellationToken cancellation" +
                    "Token = default);\r\n\r\n        /// <summary>\r\n        /// Deletes a specific blob " +
                    "in a given container.\r\n        /// </summary>\r\n        /// <param name=\"containe" +
                    "rName\">The name of the blob container.</param>\r\n        /// <param name=\"blobNam" +
                    "e\">The name of the blob.</param>\r\n        /// <param name=\"cancellationToken\">An" +
                    " optional token to cancel the asynchronous operation.</param>\r\n        Task Dele" +
                    "teAsync(string containerName, string blobName, CancellationToken cancellationTok" +
                    "en = default);\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
