<?xml version="1.0" encoding="utf-8"?>
<class id="1ea91389-93fb-4f23-b0f6-a2cda8a97bb7" type="Element Extension" typeId="e3c7b1ca-f080-45c1-b56f-8d44226c8e20">
  <name>Class Extensions</name>
  <display>Class Extensions: Class</display>
  <isAbstract>false</isAbstract>
  <sort-children>by-type-then-manually</sort-children>
  <genericTypes />
  <typeReference id="a354be5e-4f54-4675-8ada-83160bfa149d">
    <typeId>04e12b51-ed12-42a3-9667-a6aa81bb6d10</typeId>
    <isNavigable>true</isNavigable>
    <isNullable>false</isNullable>
    <isCollection>false</isCollection>
    <isRequired>true</isRequired>
    <typePackageName>Intent.Modelers.Domain</typePackageName>
    <typePackageId>6572b98d-5e13-4d4b-9ffc-820057da974e</typePackageId>
    <stereotypes />
    <genericTypeParameters />
  </typeReference>
  <isMapped>false</isMapped>
  <parentFolderId>d06187ef-95a6-4243-b299-2e2d028478ef</parentFolderId>
  <packageId>7061eb5a-c934-46e4-8c73-e3df67edf43a</packageId>
  <packageName>Intent.AspNetCore.Identity</packageName>
  <stereotypes>
    <stereotype stereotypeDefinitionId="159cbc8e-a910-40f7-8e45-3edadbb863c2" name="Type Reference Extension Settings">
      <addedByDefault>true</addedByDefault>
      <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
      <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
      <properties>
        <property name="35226a83-3965-4224-8aef-20c68a0c5180" display="Mode" value="Inherit" isActive="true" />
        <property name="7d3859d4-084d-4ff0-8b31-850b4a8f8cd0" display="Display Name" isActive="false" />
        <property name="17223dbd-8df0-4700-8b81-02274ca3ed7f" display="Hint" isActive="false" />
        <property name="b2cef034-5706-45d2-8554-f4dc582a18ff" display="Target Types" isActive="false" />
        <property name="93e4efa9-186d-4e88-ae0a-491bcd6e6f5e" display="Default Type Id" isActive="false" />
        <property name="7a0c4185-1c08-4d3e-9185-14683d7a3bd0" display="Allow Collection" value="Inherit" isActive="false" />
        <property name="e3dc90ec-4f5f-4f20-b271-e28a5094dc91" display="Allow Nullable" value="Inherit" isActive="false" />
      </properties>
    </stereotype>
    <stereotype stereotypeDefinitionId="312eab00-f6db-492e-bbb4-e41383c8d3d8" name="Extension Settings">
      <addedByDefault>true</addedByDefault>
      <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
      <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
      <properties>
        <property name="8c964307-9d03-4a14-9fd3-40ea2607955a" display="Display Text Function" value="" isActive="true" />
        <property name="996ed45f-2318-4587-9618-73db3d7cfed0" display="Validate Function" value="" isActive="true" />
      </properties>
    </stereotype>
  </stereotypes>
  <metadata />
  <childElements>
    <childElement id="b19141d9-e45a-4437-a1aa-78d5ec10a839" type="Element Event Settings" typeId="3c628ab0-2407-4fb0-8507-ddde986cff2e">
      <name>NewElementEventSettings</name>
      <display>[events]</display>
      <isAbstract>false</isAbstract>
      <sort-children>by-type-then-by-name</sort-children>
      <genericTypes />
      <isMapped>false</isMapped>
      <parentFolderId>1ea91389-93fb-4f23-b0f6-a2cda8a97bb7</parentFolderId>
      <packageId>7061eb5a-c934-46e4-8c73-e3df67edf43a</packageId>
      <packageName>Intent.AspNetCore.Identity</packageName>
      <stereotypes />
      <metadata />
      <childElements>
        <childElement id="dc764369-3fe1-4730-8ad0-a7155c5f7766" type="Element Event Handler" typeId="0ef412e3-d15a-45d3-bcd3-f646165f2eb6">
          <name>On Changed</name>
          <display>On Changed: Script</display>
          <isAbstract>false</isAbstract>
          <genericTypes />
          <typeReference id="f4b6095d-f05f-4b93-b386-8cc48c33e71c">
            <typeId>043eee26-1591-42ac-9f2c-fc911b070eb1</typeId>
            <isNavigable>true</isNavigable>
            <isNullable>false</isNullable>
            <isCollection>false</isCollection>
            <isRequired>true</isRequired>
            <typePackageName>Intent.ModuleBuilder</typePackageName>
            <typePackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</typePackageId>
            <stereotypes />
            <genericTypeParameters />
          </typeReference>
          <isMapped>false</isMapped>
          <parentFolderId>b19141d9-e45a-4437-a1aa-78d5ec10a839</parentFolderId>
          <packageId>7061eb5a-c934-46e4-8c73-e3df67edf43a</packageId>
          <packageName>Intent.AspNetCore.Identity</packageName>
          <stereotypes>
            <stereotype stereotypeDefinitionId="56bc0465-c1fe-4bca-9493-2a3ce88a4047" name="Script Settings">
              <addedByDefault>true</addedByDefault>
              <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
              <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
              <properties>
                <property name="73a4088f-626e-4d31-b0b2-113167f015b2" display="Script" value="/// &lt;reference path=&quot;../../../typings/elementmacro.context.api.d.ts&quot; /&gt;&#xD;&#xA;const identityUserStereotypeId = &quot;efde089e-21e6-4da1-b086-72d7f6caf389&quot;;&#xD;&#xA;const identityUserId = &quot;a3f490b4-3c88-49fd-b273-6efddb5b7f0d&quot;;&#xD;&#xA;const generalizationType = &quot;Generalization&quot;;&#xD;&#xA;async function execute() {&#xD;&#xA;    var _a, _b;&#xD;&#xA;    const identityUserStereotype = element.getStereotype(identityUserStereotypeId);&#xD;&#xA;    if (identityUserStereotype == null) {&#xD;&#xA;        return;&#xD;&#xA;    }&#xD;&#xA;    var generalization = element.getAssociations(generalizationType)[0];&#xD;&#xA;    if (((_b = (_a = generalization === null || generalization === void 0 ? void 0 : generalization.typeReference) === null || _a === void 0 ? void 0 : _a.getType()) === null || _b === void 0 ? void 0 : _b.id) == identityUserId) {&#xD;&#xA;        return;&#xD;&#xA;    }&#xD;&#xA;    if ((dialogService === null || dialogService === void 0 ? void 0 : dialogService.info) != null) {&#xD;&#xA;        await dialogService.info(&quot;When the \&quot;Identity User\&quot; stereotype is applied to a class it must derive from the IdentityUser class, &quot; +&#xD;&#xA;            &quot;this class will now be updated to meet this requirement,&quot;);&#xD;&#xA;    }&#xD;&#xA;    generalization === null || generalization === void 0 ? void 0 : generalization.delete();&#xD;&#xA;    createAssociation(generalizationType, element.id, identityUserId);&#xD;&#xA;}&#xD;&#xA;/**&#xD;&#xA; * Used by Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.Identity&#xD;&#xA; *&#xD;&#xA; * Source code here:&#xD;&#xA; * https://github.com/IntentArchitect/Intent.Modules/blob/master/DesignerMacros/src/aspnetcore-identity/class-on-changed/class-on-changed.ts&#xD;&#xA; */&#xD;&#xA;await execute();&#xD;&#xA;&#xD;&#xA;// Source:&#xD;&#xA;&#xD;&#xA;// /// &lt;reference path=&quot;../../../typings/elementmacro.context.api.d.ts&quot; /&gt;&#xD;&#xA;&#xD;&#xA;// const identityUserStereotypeId = &quot;efde089e-21e6-4da1-b086-72d7f6caf389&quot;;&#xD;&#xA;// const identityUserId = &quot;a3f490b4-3c88-49fd-b273-6efddb5b7f0d&quot;;&#xD;&#xA;// const generalizationType = &quot;Generalization&quot;;&#xD;&#xA;&#xD;&#xA;// async function execute(): Promise&lt;void&gt; {&#xD;&#xA;//     const identityUserStereotype = element.getStereotype(identityUserStereotypeId);&#xD;&#xA;//     if (identityUserStereotype == null) {&#xD;&#xA;//         return;&#xD;&#xA;//     }&#xD;&#xA;&#xD;&#xA;//     var generalization = element.getAssociations(generalizationType)[0] as IAssociationApi;&#xD;&#xA;//     if (generalization?.typeReference?.getType()?.id == identityUserId) {&#xD;&#xA;//         return;&#xD;&#xA;//     }&#xD;&#xA;&#xD;&#xA;//     if (dialogService?.info != null) {&#xD;&#xA;//         await dialogService.info(&#xD;&#xA;//             &quot;When the \&quot;Identity User\&quot; stereotype is applied to a class it must derive from the IdentityUser class, &quot; +&#xD;&#xA;//             &quot;this class will now be updated to meet this requirement.&quot;);&#xD;&#xA;//     }&#xD;&#xA;&#xD;&#xA;//     generalization?.delete();&#xD;&#xA;//     createAssociation(generalizationType, element.id, identityUserId);&#xD;&#xA;//  }&#xD;&#xA;&#xD;&#xA;// /**&#xD;&#xA;//  * Used by Intent.Modules.NET\Modules\Intent.Modules.AspNetCore.Identity&#xD;&#xA;//  *&#xD;&#xA;//  * Source code here:&#xD;&#xA;//  * https://github.com/IntentArchitect/Intent.Modules/blob/master/DesignerMacros/src/aspnetcore-identity/class-on-changed/class-on-changed.ts&#xD;&#xA;//  */&#xD;&#xA;&#xD;&#xA;// //await execute();&#xD;&#xA;" isActive="true" />
              </properties>
            </stereotype>
          </stereotypes>
          <metadata />
          <childElements />
        </childElement>
      </childElements>
    </childElement>
  </childElements>
</class>