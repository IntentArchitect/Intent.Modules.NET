<#@ template  debug="true"  inherits="CSharpTemplateBase<Intent.Modelers.Services.Api.ServiceModel, ServiceContractDecorator>" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="Intent.Modules.Application.Dtos.Templates" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Modelers.Services.Api" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 
using System;
using System.Collections.Generic;
using System.Threading.Tasks;
<#=DependencyUsings#>

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#=Namespace#>
{
<# 
    foreach (var line in Model.GetXmlDocLines())
    {
#>
    /// <#= line #>
<#
    }
#>
    <#= ContractAttributes()#>
    public interface <#=ClassName#> : IDisposable
    {<#= EnterClass() #>
<#
    foreach (var o in Model.Operations)
    {
        foreach (var line in o.GetXmlDocLines())
        {
#>
        /// <#= line #>
<#
        }
#>
        <#= OperationAttributes(o)#>
        <#= GetOperationReturnType(o) #> <#= o.Name.ToPascalCase() #>(<#= GetOperationDefinitionParameters(o) #>);
<#
    }
#><#= ExitClass() #>
    }
}