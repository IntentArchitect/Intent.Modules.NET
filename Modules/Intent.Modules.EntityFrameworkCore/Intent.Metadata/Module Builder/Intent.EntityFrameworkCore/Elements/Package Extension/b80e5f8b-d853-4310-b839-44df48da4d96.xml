<?xml version="1.0" encoding="utf-8"?>
<class id="b80e5f8b-d853-4310-b839-44df48da4d96" type="Package Extension" typeId="ab4152df-3add-4a08-81b6-0fefc7cbb204">
  <name>Package Extension</name>
  <display>Package Extension: Domain Package</display>
  <isAbstract>false</isAbstract>
  <sort-children>by-type-then-by-name</sort-children>
  <genericTypes />
  <typeReference id="0981cc7f-8447-4f08-9724-0429d967c6c5">
    <typeId>1a824508-4623-45d9-accc-f572091ade5a</typeId>
    <isNavigable>true</isNavigable>
    <isNullable>false</isNullable>
    <isCollection>false</isCollection>
    <isRequired>true</isRequired>
    <typePackageName>Intent.Modelers.Domain</typePackageName>
    <typePackageId>6572b98d-5e13-4d4b-9ffc-820057da974e</typePackageId>
    <stereotypes />
    <genericTypeParameters />
  </typeReference>
  <isMapped>false</isMapped>
  <parentFolderId>78be924b-a4c6-40f9-ac4e-103fd8f17ce0</parentFolderId>
  <packageId>a9d2a398-04e4-4300-9fbb-768568c65f9e</packageId>
  <packageName>Intent.EntityFrameworkCore</packageName>
  <stereotypes />
  <metadata />
  <childElements>
    <childElement id="c4327290-cccc-4b65-8f1e-e0198a8b408c" type="Context Menu" typeId="d45e383d-90ba-4b64-aca7-34ca100cea21">
      <name>[context menu]</name>
      <display>[context menu]</display>
      <isAbstract>false</isAbstract>
      <genericTypes />
      <isMapped>false</isMapped>
      <parentFolderId>b80e5f8b-d853-4310-b839-44df48da4d96</parentFolderId>
      <packageId>a9d2a398-04e4-4300-9fbb-768568c65f9e</packageId>
      <packageName>Intent.EntityFrameworkCore</packageName>
      <stereotypes />
      <metadata />
      <childElements />
    </childElement>
    <childElement id="a728265b-2c43-4ae1-b409-f6a604bab7b0" type="Package Event Settings" typeId="48bcdd5f-690c-425b-8f5e-99097a7188dc">
      <name>NewPackageEventSettings</name>
      <display>[events]</display>
      <isAbstract>false</isAbstract>
      <sort-children>by-type-then-by-name</sort-children>
      <genericTypes />
      <isMapped>false</isMapped>
      <parentFolderId>b80e5f8b-d853-4310-b839-44df48da4d96</parentFolderId>
      <packageId>a9d2a398-04e4-4300-9fbb-768568c65f9e</packageId>
      <packageName>Intent.EntityFrameworkCore</packageName>
      <stereotypes />
      <metadata />
      <childElements>
        <childElement id="a8c1f595-4f90-4419-a9f4-b07821c1bc12" type="Element Event Handler" typeId="0ef412e3-d15a-45d3-bcd3-f646165f2eb6">
          <name>On Changed</name>
          <display>On Changed: Script</display>
          <isAbstract>false</isAbstract>
          <genericTypes />
          <typeReference id="f7f59954-1b1c-48f6-b0ae-ee9110099266">
            <typeId>043eee26-1591-42ac-9f2c-fc911b070eb1</typeId>
            <isNavigable>true</isNavigable>
            <isNullable>false</isNullable>
            <isCollection>false</isCollection>
            <isRequired>true</isRequired>
            <typePackageName>Intent.ModuleBuilder</typePackageName>
            <typePackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</typePackageId>
            <stereotypes />
            <genericTypeParameters />
          </typeReference>
          <isMapped>false</isMapped>
          <parentFolderId>a728265b-2c43-4ae1-b409-f6a604bab7b0</parentFolderId>
          <packageId>a9d2a398-04e4-4300-9fbb-768568c65f9e</packageId>
          <packageName>Intent.EntityFrameworkCore</packageName>
          <stereotypes>
            <stereotype stereotypeDefinitionId="56bc0465-c1fe-4bca-9493-2a3ce88a4047" name="Script Settings">
              <addedByDefault>true</addedByDefault>
              <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
              <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
              <properties>
                <property name="73a4088f-626e-4d31-b0b2-113167f015b2" display="Script" value="const dbSettingsId = &quot;ac0a788e-d8b3-4eea-b56d-538608f1ded9&quot;;&#xD;&#xA;const partitionKeyStereotypeId = &quot;3a203a3e-116e-4a7c-b375-e690570efc3f&quot;;&#xD;&#xA;const stringTypeId = &quot;d384db9c-a279-45e1-801e-e4e8099625f2&quot;;&#xD;&#xA;&#xD;&#xA;// console.log(`Package (${element.getName()}) :: On Changed&#xD;&#xA;//     isCosmosDbProvider() = ${isCosmosDbProvider()}`);&#xD;&#xA;&#xD;&#xA;if (element.specialization !== &quot;Domain Package&quot;) {&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;if (!isCosmosDbProvider()) {&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;lookupTypesOf(&quot;Class&quot;)?.filter(x =&gt; isAggregateRoot(x) &amp;&amp; !hasSuperClass(x)).forEach(element =&gt; {&#xD;&#xA;    let partitionKey = element.getPackage()?.getStereotype(&quot;Cosmos DB Container Settings&quot;)?.getProperty(&quot;Partition Key&quot;)?.value?.trim();&#xD;&#xA;    if (partitionKey == &quot;&quot;) { partitionKey = null; }&#xD;&#xA;&#xD;&#xA;    let primaryKeyAttr = element.getChildren(&quot;Attribute&quot;).filter(x =&gt; x.hasStereotype(&quot;Primary Key&quot;))[0];&#xD;&#xA;    if (!partitionKey &amp;&amp; primaryKeyAttr &amp;&amp; !primaryKeyAttr.hasStereotype(partitionKeyStereotypeId)) { &#xD;&#xA;        primaryKeyAttr.addStereotype(partitionKeyStereotypeId);&#xD;&#xA;        return;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    if (!partitionKey) { return; }&#xD;&#xA;&#xD;&#xA;    let partitionKeyAttr = element.getChildren(&quot;Attribute&quot;).filter(x =&gt; x.hasStereotype(partitionKeyStereotypeId))[0];&#xD;&#xA;    if (!partitionKeyAttr) {&#xD;&#xA;        partitionKeyAttr = createElement(&quot;Attribute&quot;, partitionKey, element.id);&#xD;&#xA;        partitionKeyAttr.typeReference.setType(stringTypeId);&#xD;&#xA;        partitionKeyAttr.addStereotype(partitionKeyStereotypeId);&#xD;&#xA;    } else if (partitionKey != partitionKeyAttr.getName()) {&#xD;&#xA;        partitionKeyAttr.setName(partitionKey);&#xD;&#xA;    }&#xD;&#xA;});&#xD;&#xA;&#xD;&#xA;// === FUNCTIONS ===&#xD;&#xA;&#xD;&#xA;function isCosmosDbProvider() {&#xD;&#xA;    return application.getSettings(dbSettingsId)&#xD;&#xA;        ?.getField(&quot;Database Provider&quot;)&#xD;&#xA;        ?.value == &quot;cosmos&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function hasSuperClass(element) {&#xD;&#xA;    return element.getAssociations(&quot;Generalization&quot;)&#xD;&#xA;        .some(x =&gt; x.isTargetEnd());&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function isAggregateRoot(element) {&#xD;&#xA;    return ! element.getAssociations(&quot;Association&quot;)&#xD;&#xA;        .some(x =&gt; x.isSourceEnd() &amp;&amp; !x.typeReference.isCollection &amp;&amp; !x.typeReference.isNullable);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function getNamingConvention() {&#xD;&#xA;    return application.getSettings(dbSettingsId)&#xD;&#xA;        .getField(&quot;Key Naming Convention&quot;)?.value ?? &quot;pascal-case&quot;;&#xD;&#xA;}" isActive="true" />
              </properties>
            </stereotype>
          </stereotypes>
          <metadata />
          <childElements />
        </childElement>
        <childElement id="d1fc4dbc-44f7-4fea-813d-4abebc0a03b9" type="Element Event Handler" typeId="0ef412e3-d15a-45d3-bcd3-f646165f2eb6">
          <name>On Created</name>
          <display>On Created: Script</display>
          <isAbstract>false</isAbstract>
          <genericTypes />
          <typeReference id="64ebb21e-5caf-4b72-9891-6ec8efc2d9ba">
            <typeId>043eee26-1591-42ac-9f2c-fc911b070eb1</typeId>
            <isNavigable>true</isNavigable>
            <isNullable>false</isNullable>
            <isCollection>false</isCollection>
            <isRequired>true</isRequired>
            <typePackageName>Intent.ModuleBuilder</typePackageName>
            <typePackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</typePackageId>
            <stereotypes />
            <genericTypeParameters />
          </typeReference>
          <isMapped>false</isMapped>
          <parentFolderId>a728265b-2c43-4ae1-b409-f6a604bab7b0</parentFolderId>
          <packageId>a9d2a398-04e4-4300-9fbb-768568c65f9e</packageId>
          <packageName>Intent.EntityFrameworkCore</packageName>
          <stereotypes>
            <stereotype stereotypeDefinitionId="56bc0465-c1fe-4bca-9493-2a3ce88a4047" name="Script Settings">
              <addedByDefault>true</addedByDefault>
              <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
              <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
              <properties>
                <property name="73a4088f-626e-4d31-b0b2-113167f015b2" display="Script" value="if (element.specialization !== &quot;Domain Package&quot;) {&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;if (!isCosmosDbProvider()) {&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;if (! element.hasStereotype(&quot;Cosmos DB Container Settings&quot;)) {&#xD;&#xA;    element.addStereotype(&quot;b4995259-b47b-405a-a332-fd3dc69cd3a5&quot;);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function isCosmosDbProvider() {&#xD;&#xA;    return application.getSettings(&quot;ac0a788e-d8b3-4eea-b56d-538608f1ded9&quot;)&#xD;&#xA;        ?.getField(&quot;Database Provider&quot;)&#xD;&#xA;        ?.value == &quot;cosmos&quot;;&#xD;&#xA;}" isActive="true" />
              </properties>
            </stereotype>
          </stereotypes>
          <metadata />
          <childElements />
        </childElement>
        <childElement id="7eb27670-ffc6-473a-b263-0e247bd4b32a" type="Element Event Handler" typeId="0ef412e3-d15a-45d3-bcd3-f646165f2eb6">
          <name>On Loaded</name>
          <display>On Loaded: Script</display>
          <isAbstract>false</isAbstract>
          <genericTypes />
          <typeReference id="c9813a68-e5b4-4daa-9ed9-66f314c8d3a0">
            <typeId>043eee26-1591-42ac-9f2c-fc911b070eb1</typeId>
            <isNavigable>true</isNavigable>
            <isNullable>false</isNullable>
            <isCollection>false</isCollection>
            <isRequired>true</isRequired>
            <typePackageName>Intent.ModuleBuilder</typePackageName>
            <typePackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</typePackageId>
            <stereotypes />
            <genericTypeParameters />
          </typeReference>
          <isMapped>false</isMapped>
          <parentFolderId>a728265b-2c43-4ae1-b409-f6a604bab7b0</parentFolderId>
          <packageId>a9d2a398-04e4-4300-9fbb-768568c65f9e</packageId>
          <packageName>Intent.EntityFrameworkCore</packageName>
          <stereotypes>
            <stereotype stereotypeDefinitionId="56bc0465-c1fe-4bca-9493-2a3ce88a4047" name="Script Settings">
              <addedByDefault>true</addedByDefault>
              <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
              <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
              <properties>
                <property name="73a4088f-626e-4d31-b0b2-113167f015b2" display="Script" value="if (element.specialization !== &quot;Domain Package&quot;) {&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;if (!isCosmosDbProvider()) {&#xD;&#xA;    return;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;ensureCosmosDbContainer(element);&#xD;&#xA;ensureClassesHavePartitionKey();&#xD;&#xA;&#xD;&#xA;// === FUNCTIONS ===&#xD;&#xA;&#xD;&#xA;function ensureCosmosDbContainer(element) {&#xD;&#xA;    const cosmosDbContainerStereotypeId = &quot;b4995259-b47b-405a-a332-fd3dc69cd3a5&quot;;&#xD;&#xA;    if (! element.hasStereotype(&quot;Cosmos DB Container Settings&quot;)) {&#xD;&#xA;        element.addStereotype(cosmosDbContainerStereotypeId);&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function ensureClassesHavePartitionKey() {&#xD;&#xA;    lookupTypesOf(&quot;Class&quot;).forEach(clazz =&gt; {&#xD;&#xA;        processSingleClassForPartitionKey(clazz);&#xD;&#xA;    });&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function processSingleClassForPartitionKey(clazz) {&#xD;&#xA;    const partitionKeyStereotypeId = &quot;3a203a3e-116e-4a7c-b375-e690570efc3f&quot;;&#xD;&#xA;    const stringTypeId = &quot;d384db9c-a279-45e1-801e-e4e8099625f2&quot;;&#xD;&#xA;    &#xD;&#xA;    if (!isCosmosDbProvider() || (!isAggregateRoot(clazz) &amp;&amp; !clazz.hasStereotype(&quot;Table&quot;)) || hasSuperClass(clazz)) { &#xD;&#xA;        clazz.getChildren(&quot;Attribute&quot;)&#xD;&#xA;            .filter(x =&gt; x.hasStereotype(partitionKeyStereotypeId))&#xD;&#xA;            .forEach(x =&gt; {&#xD;&#xA;                x.removeStereotype(partitionKeyStereotypeId);&#xD;&#xA;                x.delete();&#xD;&#xA;            });&#xD;&#xA;        return; &#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    let partitionKey = clazz.getPackage()?.getStereotype(&quot;Cosmos DB Container Settings&quot;)?.getProperty(&quot;Partition Key&quot;)?.value?.trim();&#xD;&#xA;    if (partitionKey == &quot;&quot;) { partitionKey = null; }&#xD;&#xA;&#xD;&#xA;    let partitionKeyAttributes = clazz.getChildren(&quot;Attribute&quot;).filter(x =&gt; x.hasStereotype(partitionKeyStereotypeId));&#xD;&#xA;    console.log(`partitionKeyAttributes.length = ${partitionKeyAttributes}`);&#xD;&#xA;    if (partitionKeyAttributes.length &gt; 1) {&#xD;&#xA;        partitionKeyAttributes.forEach(x =&gt; x.removeStereotype(partitionKeyStereotypeId));&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    let primaryKeyAttr = clazz.getChildren(&quot;Attribute&quot;).filter(x =&gt; x.hasStereotype(&quot;Primary Key&quot;))[0];&#xD;&#xA;    if (!partitionKey &amp;&amp; primaryKeyAttr &amp;&amp; !primaryKeyAttr.hasStereotype(partitionKeyStereotypeId)) { &#xD;&#xA;        primaryKeyAttr.addStereotype(partitionKeyStereotypeId);&#xD;&#xA;        return;&#xD;&#xA;    }&#xD;&#xA;&#xD;&#xA;    if (!partitionKey) { return; }&#xD;&#xA;&#xD;&#xA;    let possiblePkAttrs = clazz.getChildren(&quot;Attribute&quot;).filter(x =&gt; x.getName().toLowerCase() == partitionKey.toLowerCase())&#xD;&#xA;    if (possiblePkAttrs.length == 0) {&#xD;&#xA;        let pkAttr = createElement(&quot;Attribute&quot;, partitionKey, clazz.id);&#xD;&#xA;        pkAttr.setOrder(1);&#xD;&#xA;        pkAttr.typeReference.setType(stringTypeId);&#xD;&#xA;    } else if (! possiblePkAttrs[0].hasStereotype(partitionKeyStereotypeId)) {&#xD;&#xA;        possiblePkAttrs[0].addStereotype(partitionKeyStereotypeId);&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function isCosmosDbProvider() {&#xD;&#xA;    const dbSettingsId = &quot;ac0a788e-d8b3-4eea-b56d-538608f1ded9&quot;;&#xD;&#xA;    return application.getSettings(dbSettingsId)&#xD;&#xA;        ?.getField(&quot;Database Provider&quot;)&#xD;&#xA;        ?.value == &quot;cosmos&quot;;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function isAggregateRoot(element) {&#xD;&#xA;    return ! element.getAssociations(&quot;Association&quot;)&#xD;&#xA;        .some(x =&gt; x.isSourceEnd() &amp;&amp; !x.typeReference.isCollection &amp;&amp; !x.typeReference.isNullable);&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function hasSuperClass(element) {&#xD;&#xA;    return element.getAssociations(&quot;Generalization&quot;)&#xD;&#xA;        .some(x =&gt; x.isTargetEnd());&#xD;&#xA;}" isActive="true" />
              </properties>
            </stereotype>
          </stereotypes>
          <metadata />
          <childElements />
        </childElement>
      </childElements>
    </childElement>
  </childElements>
</class>