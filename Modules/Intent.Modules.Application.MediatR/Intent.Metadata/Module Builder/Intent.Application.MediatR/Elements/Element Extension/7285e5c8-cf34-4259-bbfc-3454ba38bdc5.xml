<?xml version="1.0" encoding="utf-8"?>
<class id="7285e5c8-cf34-4259-bbfc-3454ba38bdc5" type="Element Extension" typeId="e3c7b1ca-f080-45c1-b56f-8d44226c8e20">
  <name>Query Extension</name>
  <display>Query Extension: Query</display>
  <isAbstract>false</isAbstract>
  <sort-children>by-type-then-manually</sort-children>
  <genericTypes />
  <typeReference id="8ad8cb72-8aa4-4bed-a72a-68b7822df455">
    <typeId>e71b0662-e29d-4db2-868b-8a12464b25d0</typeId>
    <isNavigable>true</isNavigable>
    <isNullable>false</isNullable>
    <isCollection>false</isCollection>
    <isRequired>true</isRequired>
    <typePackageName>Intent.Modelers.Services.CQRS</typePackageName>
    <typePackageId>45fb22e9-f493-4de5-9fe0-845f783aa9d4</typePackageId>
    <stereotypes />
    <genericTypeParameters />
  </typeReference>
  <isMapped>false</isMapped>
  <parentFolderId>b00f3e82-539d-4fff-8895-6ef14ac1e659</parentFolderId>
  <packageId>e92495db-1b26-4389-bf06-cc1b375520b1</packageId>
  <packageName>Intent.Application.MediatR</packageName>
  <stereotypes>
    <stereotype stereotypeDefinitionId="159cbc8e-a910-40f7-8e45-3edadbb863c2" name="Type Reference Extension Settings">
      <addedByDefault>true</addedByDefault>
      <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
      <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
      <properties>
        <property name="35226a83-3965-4224-8aef-20c68a0c5180" display="Mode" value="Inherit" isActive="true" />
        <property name="7d3859d4-084d-4ff0-8b31-850b4a8f8cd0" display="Display Name" isActive="false" />
        <property name="17223dbd-8df0-4700-8b81-02274ca3ed7f" display="Hint" isActive="false" />
        <property name="b2cef034-5706-45d2-8554-f4dc582a18ff" display="Target Types" isActive="false" />
        <property name="93e4efa9-186d-4e88-ae0a-491bcd6e6f5e" display="Default Type Id" isActive="false" />
        <property name="7a0c4185-1c08-4d3e-9185-14683d7a3bd0" display="Allow Collection" value="Inherit" isActive="false" />
        <property name="e3dc90ec-4f5f-4f20-b271-e28a5094dc91" display="Allow Nullable" value="Inherit" isActive="false" />
      </properties>
    </stereotype>
    <stereotype stereotypeDefinitionId="312eab00-f6db-492e-bbb4-e41383c8d3d8" name="Extension Settings">
      <addedByDefault>true</addedByDefault>
      <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
      <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
      <properties>
        <property name="8c964307-9d03-4a14-9fd3-40ea2607955a" display="Display Text Function" value="" isActive="true" />
        <property name="996ed45f-2318-4587-9618-73db3d7cfed0" display="Validate Function" value="" isActive="true" />
      </properties>
    </stereotype>
  </stereotypes>
  <metadata />
  <childElements>
    <childElement id="6c2d7b37-f2a2-4b61-afea-6dde85d5d1b9" type="Element Event Settings" typeId="3c628ab0-2407-4fb0-8507-ddde986cff2e">
      <name>NewElementEventSettings</name>
      <display>[events]</display>
      <isAbstract>false</isAbstract>
      <sort-children>by-type-then-by-name</sort-children>
      <genericTypes />
      <isMapped>false</isMapped>
      <parentFolderId>7285e5c8-cf34-4259-bbfc-3454ba38bdc5</parentFolderId>
      <packageId>e92495db-1b26-4389-bf06-cc1b375520b1</packageId>
      <packageName>Intent.Application.MediatR</packageName>
      <stereotypes />
      <metadata />
      <childElements>
        <childElement id="062d1523-31f9-4364-8b37-a3769982627f" type="Element Event Handler" typeId="0ef412e3-d15a-45d3-bcd3-f646165f2eb6">
          <name>On Changed</name>
          <display>On Changed: Script</display>
          <isAbstract>false</isAbstract>
          <genericTypes />
          <typeReference id="54dbf3a1-dd0b-4136-9ef0-0367f67e49a3">
            <typeId>043eee26-1591-42ac-9f2c-fc911b070eb1</typeId>
            <isNavigable>true</isNavigable>
            <isNullable>false</isNullable>
            <isCollection>false</isCollection>
            <isRequired>true</isRequired>
            <typePackageName>Intent.ModuleBuilder</typePackageName>
            <typePackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</typePackageId>
            <stereotypes />
            <genericTypeParameters />
          </typeReference>
          <isMapped>false</isMapped>
          <parentFolderId>6c2d7b37-f2a2-4b61-afea-6dde85d5d1b9</parentFolderId>
          <packageId>e92495db-1b26-4389-bf06-cc1b375520b1</packageId>
          <packageName>Intent.Application.MediatR</packageName>
          <stereotypes>
            <stereotype stereotypeDefinitionId="56bc0465-c1fe-4bca-9493-2a3ce88a4047" name="Script Settings">
              <addedByDefault>true</addedByDefault>
              <definitionPackageName>Intent.ModuleBuilder</definitionPackageName>
              <definitionPackageId>9972b2a9-b749-4bba-b5c8-824bf694c6ef</definitionPackageId>
              <properties>
                <property name="73a4088f-626e-4d31-b0b2-113167f015b2" display="Script" value="let authorizeStereoTypeId = &quot;b06358cd-aed3-4c39-96cf-abb131e4ecde&quot;;&#xD;&#xA;if (hasNewSecurityElements()){&#xD;&#xA;    let auth = element.getStereotype(authorizeStereoTypeId);&#xD;&#xA;    if (auth != null){&#xD;&#xA;        auth.getProperty(&quot;Roles&quot;).setValue(getElementsAsText(auth, &quot;Security Roles&quot;));&#xD;&#xA;        auth.getProperty(&quot;Policy&quot;).setValue(getElementsAsText(auth, &quot;Security Policies&quot;));&#xD;&#xA;    }&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function hasNewSecurityElements(){&#xD;&#xA;    return lookupTypesOf(&quot;Security Configuration&quot;)[0]?.getChildren()?.length &gt; 0;&#xD;&#xA;}&#xD;&#xA;&#xD;&#xA;function getElementsAsText(auth, propertyName){&#xD;&#xA;    let values = auth.getProperty(propertyName).getValue();&#xD;&#xA;     // Parse the string to get the array of GUIDs&#xD;&#xA;    const guids = JSON.parse(values);&#xD;&#xA;    &#xD;&#xA;    if (!guids?.map){&#xD;&#xA;        return &quot;&quot;;&#xD;&#xA;    }&#xD;&#xA;    // Look up the objects and extract the values&#xD;&#xA;    const lookupValues = guids.map(guid =&gt; {&#xD;&#xA;        const obj = lookup(guid);&#xD;&#xA;        return obj ? obj.getName() : null;&#xD;&#xA;    }).filter(value =&gt; value !== null); // Filter out any null values&#xD;&#xA;    &#xD;&#xA;    // Join the lookup values into a single string&#xD;&#xA;    return lookupValues.join(',');  &#xD;&#xA;}" isActive="true" />
              </properties>
            </stereotype>
          </stereotypes>
          <metadata />
          <childElements />
        </childElement>
      </childElements>
    </childElement>
  </childElements>
</class>