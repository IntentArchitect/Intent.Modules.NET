// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.Eventing.GoogleCloud.PubSub.Templates.EventingTemplates.GoogleEventBusSubscriptionManager
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using Intent.Modules.Eventing.Contracts.Templates;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Eventing.GoogleCloud.PubSub\Templates\EventingTemplates\GoogleEventBusSubscriptionManager\GoogleEventBusSubscriptionManagerTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class GoogleEventBusSubscriptionManagerTemplate : CSharpTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write(@"using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.Json;
using System.Threading;
using System.Threading.Tasks;
using Google.Cloud.PubSub.V1;
using Microsoft.Extensions.DependencyInjection;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace ");
            
            #line 22 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Eventing.GoogleCloud.PubSub\Templates\EventingTemplates\GoogleEventBusSubscriptionManager\GoogleEventBusSubscriptionManagerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write(";\r\n\r\npublic class ");
            
            #line 24 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Eventing.GoogleCloud.PubSub\Templates\EventingTemplates\GoogleEventBusSubscriptionManager\GoogleEventBusSubscriptionManagerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" : ");
            
            #line 24 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Eventing.GoogleCloud.PubSub\Templates\EventingTemplates\GoogleEventBusSubscriptionManager\GoogleEventBusSubscriptionManagerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetEventBusSubscriptionManagerInterfaceName()));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    private delegate Task MessageHandlerFunc(IServiceProvider provider, Pubs" +
                    "ubMessage message, CancellationToken cancellationToken);\r\n    \r\n    private read" +
                    "only Dictionary<string, MessageHandlerFunc> _handlers;\r\n\r\n    public ");
            
            #line 30 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Eventing.GoogleCloud.PubSub\Templates\EventingTemplates\GoogleEventBusSubscriptionManager\GoogleEventBusSubscriptionManagerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(@"()
    {
        _handlers = new Dictionary<string, MessageHandlerFunc>();
    }

    public void RegisterEventHandler<TMessage>()
        where TMessage : class
    {
        _handlers.Add(typeof(TMessage).FullName!, async (provider, message, cancellationToken) =>
        {
            var messageObj = JsonSerializer.Deserialize<TMessage>(System.Text.Encoding.UTF8.GetString(message.Data.ToArray()));
            var handler = provider.GetService<");
            
            #line 41 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Eventing.GoogleCloud.PubSub\Templates\EventingTemplates\GoogleEventBusSubscriptionManager\GoogleEventBusSubscriptionManagerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetIntegrationEventHandlerInterfaceName()));
            
            #line default
            #line hidden
            this.Write(@"<TMessage>>()!;
            await handler.HandleAsync(messageObj!, cancellationToken);
        });
    }

    public async Task DispatchAsync(IServiceProvider serviceProvider, PubsubMessage message, CancellationToken cancellationToken)
    {
        if (!message.Attributes.TryGetValue(""MessageType"", out var messageTypeStr) || 
            string.IsNullOrEmpty(messageTypeStr) || 
            !_handlers.TryGetValue(messageTypeStr, out var messageHandler))
        {
            var handler = serviceProvider.GetService<");
            
            #line 52 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Eventing.GoogleCloud.PubSub\Templates\EventingTemplates\GoogleEventBusSubscriptionManager\GoogleEventBusSubscriptionManagerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetIntegrationEventHandlerInterfaceName()));
            
            #line default
            #line hidden
            this.Write("<GenericMessage>>()!;\r\n            await handler.HandleAsync(new ");
            
            #line 53 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Eventing.GoogleCloud.PubSub\Templates\EventingTemplates\GoogleEventBusSubscriptionManager\GoogleEventBusSubscriptionManagerTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetGenericMessageName()));
            
            #line default
            #line hidden
            this.Write(@"(
                MessageId: message.MessageId, 
                Attributes: message.Attributes, 
                MessageBody: System.Text.Encoding.UTF8.GetString(message.Data.ToArray())), cancellationToken);
            return;
        }

        await messageHandler(serviceProvider, message, cancellationToken);
    }
}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
