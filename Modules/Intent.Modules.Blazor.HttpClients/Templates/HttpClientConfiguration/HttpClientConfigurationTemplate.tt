<#@ template language="C#" inherits="CSharpTemplateBase<IList<Intent.Modelers.Types.ServiceProxies.Api.ServiceProxyModel>>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
        public static void AddHttpClients(this IServiceCollection services, IConfiguration configuration)
        {
<#
    foreach (var proxy in Model)
    {
#>
            services.AddHttpClient<<#= this.GetServiceContractName(proxy) #>, <#= this.GetHttpClientName(proxy) #>>(http =>
            {
                http.BaseAddress = configuration.GetValue<Uri>("<#= GetConfigKey(proxy, "Uri") #>");
                http.Timeout = configuration.GetValue<TimeSpan?>("<#= GetConfigKey(proxy, "Timeout") #>") ?? TimeSpan.FromSeconds(100);
            });
<#        
    }
#>
        }
    }
}