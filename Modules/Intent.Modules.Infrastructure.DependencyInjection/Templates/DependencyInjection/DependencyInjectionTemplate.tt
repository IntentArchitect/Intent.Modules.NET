<#@ template language="C#" inherits="CSharpTemplateBase<object, Intent.Modules.Infrastructure.DependencyInjection.Templates.DependencyInjection.DependencyInjectionDecorator>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
        public static IServiceCollection AddInfrastructure(this IServiceCollection services, IConfiguration configuration)
        {
<#  foreach(var decorator in GetDecorators()) { #>
            <#= decorator.ServiceRegistration() #>
<#  } #>
<#  foreach(var registration in _registrationRequests) { #>
            <#= DefineServiceRegistration(registration) #>
<#  } #>
            return services;
        }
    }
}