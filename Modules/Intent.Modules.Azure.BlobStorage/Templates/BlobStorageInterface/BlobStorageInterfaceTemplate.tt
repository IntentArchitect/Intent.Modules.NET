<#@ template language="C#" inherits="CSharpTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using System;
using System.IO;
using System.Threading;
using System.Threading.Tasks;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public interface <#= ClassName #>
    {
        Task<Stream> DownloadContentAsync(Uri cloudStorageLocation, CancellationToken cancellationToken = default);
        Task<Stream> DownloadContentAsync(string containerName, string blobName, CancellationToken cancellationToken = default);
        Task UploadContent(Uri cloudStorageLocation, Stream streamToUpload, bool overwrite = true, CancellationToken cancellationToken = default);
        Task UploadContent(string containerName, string blobName, Stream streamToUpload, bool overwrite = true, CancellationToken cancellationToken = default);
        Task DeleteContent(Uri cloudStorageLocation, CancellationToken cancellationToken = default);
        Task DeleteContent(string containerName, string blobName, CancellationToken cancellationToken = default);
    }
}