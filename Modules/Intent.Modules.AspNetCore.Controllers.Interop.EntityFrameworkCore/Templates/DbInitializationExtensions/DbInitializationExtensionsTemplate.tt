<#@ template language="C#" inherits="CSharpTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modules.EntityFrameworkCore.Templates" #>

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
        /// <summary>
        /// If configured to do so, a check is performed to see
        /// whether the database exist and if not will create it
        /// based on this container configuration.
        /// </summary>
        public static void EnsureDbCreation(this IApplicationBuilder builder)
        {
            var dbContext = builder.ApplicationServices.GetService<<#= this.GetDbContextName() #>>();
            if (dbContext == null)
            {
                throw new InvalidOperationException("DbContext not configured in Services Collection in order to ensure that the database is created.");
            }

            dbContext.EnsureDbCreated();
        }
    }
}