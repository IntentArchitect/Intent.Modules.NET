//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Intent.Modules.Application.Contracts.Clients.Templates.ServiceContract {
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    
    public partial class ServiceContractTemplate : CSharpTemplateBase<Intent.Modelers.Types.ServiceProxies.Api.ServiceProxyModel> {
        
        public override string TransformText() {
            this.GenerationEnvironment = null;
            
            #line 10 ""
            this.Write("using System;\r\nusing System.Threading;\r\nusing System.Threading.Tasks;\r\n\r\n[assembl" +
                    "y: DefaultIntentManaged(Mode.Fully)]\r\n\r\nnamespace ");
            
            #line default
            #line hidden
            
            #line 16 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( Namespace ));
            
            #line default
            #line hidden
            
            #line 16 ""
            this.Write("\r\n{\r\n    public interface ");
            
            #line default
            #line hidden
            
            #line 18 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( ClassName ));
            
            #line default
            #line hidden
            
            #line 18 ""
            this.Write(" : IDisposable\r\n    {\r\n");
            
            #line default
            #line hidden
            
            #line 20 ""

    foreach (var o in Model.MappedService.Operations)
    {

            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write("        ");
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GetOperationReturnType(o) ));
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(" ");
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( o.Name.ToPascalCase() ));
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write("(");
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(this.ToStringHelper.ToStringWithCulture( GetOperationDefinitionParameters(o) ));
            
            #line default
            #line hidden
            
            #line 24 ""
            this.Write(");\r\n");
            
            #line default
            #line hidden
            
            #line 25 ""

    }

            
            #line default
            #line hidden
            
            #line 28 ""
            this.Write("    }\r\n}");
            
            #line default
            #line hidden
            return this.GenerationEnvironment.ToString();
        }
        
        public override void Initialize() {
            base.Initialize();
        }
    }
}
