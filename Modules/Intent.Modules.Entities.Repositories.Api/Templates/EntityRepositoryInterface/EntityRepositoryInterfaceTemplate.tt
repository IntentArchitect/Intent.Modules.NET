<#@ template  debug="true"  inherits="CSharpTemplateBase<ClassModel>" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="Intent.Modelers.Domain.Api" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic"#>
<#@ import namespace="Intent.Metadata.RDBMS.Api" #>
<#


#>
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public interface <#= ClassName #> : <#= RepositoryInterfaceName #><<#= EntityInterfaceName #>, <#= EntityStateName #>>
    {
<#  if (Model.HasSurrogateKey()) { #>
        Task<<#= EntityInterfaceName #>> FindByIdAsync(<#= PrimaryKeyType #> <#= PrimaryKeyName.ToCamelCase() #>, CancellationToken cancellationToken = default);
        Task<List<<#= EntityInterfaceName #>>> FindByIdsAsync(<#= PrimaryKeyType #>[] <#= PrimaryKeyName.ToCamelCase().Pluralize() #>, CancellationToken cancellationToken = default);
<#  } #>
    }
}