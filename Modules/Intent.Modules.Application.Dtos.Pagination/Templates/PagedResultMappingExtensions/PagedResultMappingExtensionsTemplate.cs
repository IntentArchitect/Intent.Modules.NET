// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 17.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.Application.Dtos.Pagination.Templates.PagedResultMappingExtensions
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.Dtos.Pagination\Templates\PagedResultMappingExtensions\PagedResultMappingExtensionsTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "17.0.0.0")]
    public partial class PagedResultMappingExtensionsTemplate : CSharpTemplateBase<IList<Intent.Modelers.Services.Api.DTOModel>>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using System;\r\nusing System.Linq;\r\n\r\n[assembly: DefaultIntentManaged(Mode.Fully)]" +
                    "\r\n\r\nnamespace ");
            
            #line 15 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.Dtos.Pagination\Templates\PagedResultMappingExtensions\PagedResultMappingExtensionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public static class ");
            
            #line 17 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.Dtos.Pagination\Templates\PagedResultMappingExtensions\PagedResultMappingExtensionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("\r\n    {\r\n        /// <summary>\r\n        /// For mapping a paged-list of Domain el" +
                    "ements into a page of DTO elements. See <see cref=\"");
            
            #line 20 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.Dtos.Pagination\Templates\PagedResultMappingExtensions\PagedResultMappingExtensionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPagedListInterfaceName()));
            
            #line default
            #line hidden
            this.Write(@"{T}""/>. 
        /// </summary>
        /// <param name=""pagedList"">A single page retrieved from a persistence store.</param>
        /// <param name=""mapFunc"">
        /// Provide a mapping function where a single Domain element is supplied to the function
        /// that returns a single DTO element. There are some convenient mapping extension methods
        /// available, or alternatively you can instantiate a new DTO element.
        /// <example>results.MapToPagedResult(x => x.MapToItemDTO(_mapper));</example>
        /// <example>results.MapToPagedResult(x => ItemDTO.Create(x.ItemName));</example>
        /// </param>
        /// <typeparam name=""TDomain"">Domain element type</typeparam>
        /// <typeparam name=""TDto"">DTO element type</typeparam>
        /// <returns>A single page of DTO elements</returns>
        public static ");
            
            #line 33 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.Dtos.Pagination\Templates\PagedResultMappingExtensions\PagedResultMappingExtensionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetPagedResultName()));
            
            #line default
            #line hidden
            this.Write("<TDto> MapToPagedResult<TDomain, TDto>(this ");
            
            #line 33 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.Dtos.Pagination\Templates\PagedResultMappingExtensions\PagedResultMappingExtensionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetPagedListInterfaceName()));
            
            #line default
            #line hidden
            this.Write("<TDomain> pagedList, Func<TDomain, TDto> mapFunc)\r\n        { \r\n            var da" +
                    "ta = pagedList.Select(mapFunc).ToList();\r\n\r\n            return ");
            
            #line 37 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.Dtos.Pagination\Templates\PagedResultMappingExtensions\PagedResultMappingExtensionsTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(this.GetPagedResultName()));
            
            #line default
            #line hidden
            this.Write(@"<TDto>.Create(
                totalCount: pagedList.TotalCount,
                pageCount: pagedList.PageCount,
                pageSize: pagedList.PageSize,
                pageNumber: pagedList.PageNo,
                data: data);
        }
    }

}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
    #line default
    #line hidden
}
