// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Intent.Modules.Application.AutoMapper.Templates.MappingProfile
{
    using System.Collections.Generic;
    using System.Linq;
    using Intent.Modules.Common;
    using Intent.Modules.Common.Templates;
    using Intent.Modules.Common.CSharp.Templates;
    using Intent.Templates;
    using Intent.Metadata.Models;
    using Intent.Modules.Application.AutoMapper.Templates.MapFromInterface;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.AutoMapper\Templates\MappingProfile\MappingProfileTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class MappingProfileTemplate : CSharpTemplateBase<object>
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("using AutoMapper;\r\nusing System;\r\nusing System.Linq;\r\nusing System.Reflection;\r\n\r\n[assembly: DefaultIntentManaged(Mode.Fully)]\r\n\r\nnamespace ");
            
            #line 18 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.AutoMapper\Templates\MappingProfile\MappingProfileTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Namespace));
            
            #line default
            #line hidden
            this.Write("\r\n{\r\n    public class ");
            
            #line 20 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.AutoMapper\Templates\MappingProfile\MappingProfileTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write(" : Profile\r\n    {\r\n        public  ");
            
            #line 22 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.AutoMapper\Templates\MappingProfile\MappingProfileTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(ClassName));
            
            #line default
            #line hidden
            this.Write("()\r\n        {\r\n            ApplyMappingsFromAssembly(Assembly.GetExecutingAssembly());\r\n        }\r\n\r\n        private void ApplyMappingsFromAssembly(Assembly assembly)\r\n        {\r\n            var types = assembly.GetExportedTypes()\r\n                .Where(t => t.GetInterfaces().Any(i => \r\n                    i.IsGenericType && i.GetGenericTypeDefinition() == typeof(");
            
            #line 31 "C:\Dev\Intent.Modules.NET\Modules\Intent.Modules.Application.AutoMapper\Templates\MappingProfile\MappingProfileTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(GetTypeName(MapFromInterfaceTemplate.TemplateId)));
            
            #line default
            #line hidden
            this.Write("<>)))\r\n                .ToList();\r\n\r\n            foreach (var type in types)\r\n            {\r\n                var instance = Activator.CreateInstance(type, true);\r\n\r\n                var methodInfo = type.GetMethod(\"Mapping\") \r\n                    ?? type.GetInterface(\"IMapFrom`1\")?.GetMethod(\"Mapping\");\r\n                \r\n                methodInfo?.Invoke(instance, new object[] { this });\r\n            }\r\n        }\r\n    }\r\n}");
            return this.GenerationEnvironment.ToString();
        }
    }
    
}
