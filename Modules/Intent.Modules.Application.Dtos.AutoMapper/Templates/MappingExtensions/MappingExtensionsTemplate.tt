<#@ template language="C#" inherits="CSharpTemplateBase<Intent.Modelers.Services.Api.DTOModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using AutoMapper;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.Serialization;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#=ClassName#> 
    {
        public static <#= GetDtoModelName() #> MapTo<#= GetDtoModelName() #>(this <#= GetEntityName() #> projectFrom, IMapper mapper)
        {
            return mapper.Map<<#= GetDtoModelName() #>>(projectFrom);
        }

        public static List<<#= GetDtoModelName() #>> MapTo<#= GetDtoModelName() #>List(this IEnumerable<<#= GetEntityName() #>> projectFrom, IMapper mapper)
        {
            return projectFrom.Select(x => x.MapTo<#= GetDtoModelName() #>(mapper)).ToList();
        }
    }
}