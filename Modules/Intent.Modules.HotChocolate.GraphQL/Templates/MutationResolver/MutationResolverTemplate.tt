<#@ template language="C#" inherits="CSharpTemplateBase<Intent.Modelers.Services.Api.ServiceModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
using HotChocolate;
using HotChocolate.Types;
using System.Collections.Generic;
using System.Threading.Tasks;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    [ExtendObjectType("Mutation")]
    public class <#= ClassName #>
    {<#  
    foreach(var operation in Model.Operations.Where(IsMutation)) { #>

        public <#= GetReturnType(operation) #> <#= operation.Name.ToPascalCase() #>(<#= GetParameters(operation) #>)
        {<#= GetImplementation(operation) #>
        }
<#  }#>
    }
}