<#@ template language="C#" inherits="CSharpTemplateBase<Intent.Modelers.Types.ServiceProxies.Api.ServiceProxyModel>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Metadata.WebApi.Api" #>
using System;
using System.Threading;
using System.Threading.Tasks;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public interface <#= ClassName #> : IDisposable
    {
<#
    foreach (var o in Model.MappedService.Operations.Where(p => p.HasHttpSettings()))
    {
#>
        <#= GetOperationReturnType(o) #> <#= GetOperationName(o) #>(<#= GetOperationDefinitionParameters(o) #>);
<#
    }
#>
    }
}