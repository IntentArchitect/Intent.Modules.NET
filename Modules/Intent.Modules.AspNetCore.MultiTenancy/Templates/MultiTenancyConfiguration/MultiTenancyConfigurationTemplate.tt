<#@ template language="C#" inherits="CSharpTemplateBase<object>" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="Intent.Modules.Common" #>
<#@ import namespace="Intent.Modules.Common.Templates" #>
<#@ import namespace="Intent.Modules.Common.CSharp.Templates" #>
<#@ import namespace="Intent.Templates" #>
<#@ import namespace="Intent.Metadata.Models" #>
<#@ import namespace="Intent.Modules.AspNetCore.MultiTenancy.Settings" #>
using Finbuckle.MultiTenant;
using Intent.RoslynWeaver.Attributes;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;

[assembly: DefaultIntentManaged(Mode.Fully)]

namespace <#= Namespace #>
{
    public static class <#= ClassName #>
    {
        [IntentManaged(Mode.Fully)]
        public static IServiceCollection ConfigureMultiTenancy(this IServiceCollection services, IConfiguration configuration)
        {
            services.AddMultiTenant<TenantInfo>()
<#  if (ExecutionContext.Settings.GetMultitenancySettings().Store().IsEntityFrameworkCore()) { #>
                .WithEFCoreStore<MultiTenantStoreDbContext, TenantInfo>() // See https://www.finbuckle.com/MultiTenant/Docs/v6.5.1/Stores#efcore-store
<#  } else if (ExecutionContext.Settings.GetMultitenancySettings().Store().IsInMemory()) { #>
                .WithInMemoryStore(SetupInMemoryStore) // See https://www.finbuckle.com/MultiTenant/Docs/v6.5.1/Stores#in-memory-store
<#  } else if (ExecutionContext.Settings.GetMultitenancySettings().Store().IsInMemory()) { #>
                .WithConfigurationStore() // See https://www.finbuckle.com/MultiTenant/Docs/v6.5.1/Stores#configuration-store
<#  } #>
<#  if (ExecutionContext.Settings.GetMultitenancySettings().Strategy().IsHeaderStrategy()) { #>
                .WithHeaderStrategy("X-Tenant-Identifier"); // See https://www.finbuckle.com/MultiTenant/Docs/v6.5.1/Strategies#header-strategy
<#  } else if (ExecutionContext.Settings.GetMultitenancySettings().Strategy().IsHostStrategy()) { #>
                .WithHostStrategy(); // default pattern is __tenant__.* (e.g. https://tenantidentifier.example.com). See https://www.finbuckle.com/MultiTenant/Docs/v6.5.1/Strategies#host-strategy
<#  } else if (ExecutionContext.Settings.GetMultitenancySettings().Strategy().IsClaimStrategy()) { #>
                .WithClaimStrategy(); // default claim value with type __tenant__. See https://www.finbuckle.com/MultiTenant/Docs/v6.5.1/Strategies#claim-strategy
<#  } #>
            return services;
        }
<#  if (ExecutionContext.Settings.GetMultitenancySettings().Store().IsInMemory()) { #>

        [IntentManaged(Mode.Ignore)]
        private static void SetupInMemoryStore(InMemoryStoreOptions<TenantInfo> options)
        {
            // configure tenants in memory:
            options.Tenants.Add(new TenantInfo() { Id = "sample-tenant-1", Identifier = "tenant1", Name = "Tenant 1", ConnectionString = "Tenant1Connection"});
            options.Tenants.Add(new TenantInfo() { Id = "sample-tenant-2", Identifier = "tenant2", Name = "Tenant 2", ConnectionString = "Tenant2Connection"});
        }
<#  } #>
    }
}